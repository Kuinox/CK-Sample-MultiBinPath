{
  // This is the standard configuration section of standard ILogger .Net Core.
  "Logging": {
    "LogLevel": {
      // This overrides the default that is configured in the Main (that is everything in "Development", Information
      // and above otherwise).
      "Default": "Warning"
    }
  },
  // This is the CK.Monitoring configuration.
  // Note that all this can be reconfigured dynamically at any time!
  "Monitoring": {
    // Sets the AppDomain's global static ActivityMonitor.DefaultFilter that is used when the MinimalFilter of an ActivityMonitor
    // is Undefined.
    // Note that as soon as a minimal filter exists (either directly on the ActivityMonitor or through one of its clients), this 
    // configuration doesn't apply. This default to "Trace": by setting it to "Debug", you catch all logs from any "free" monitors.
    //
    "GlobalDefaultFilter": "Debug",

    // The output "Logs" folder is the default. It is automatically created in the application
    // root directory (IHostingEnvironment.ContentRootPath).
    // This can be changed if needed either with a relative or absolute path.
    //
    // "LogPath": "Logs",

    //
    // By default, unhandled .Net exceptions are logged into the "CriticalErrors" folder (as basic text files) and in
    // the "{00000000-0000-0000-0000-000000000000}" default monitor.
    // There is little reason to change this default configuration.
    //
    // "LogUnhandledExceptions": true,

    //
    // By default, a .Net Core ILoggerProvider routes all the logs emitted by the standard ILogger to the
    // GrandOutput.ExternalLogs so that everything appears in the  "{00000000-0000-0000-0000-000000000000}" default monitor.
    // There is little reason to change this default configuration.
    // 
    // "HandleDotNetLogs": true,
    //

    // Now comes the GrandOutput log handlers.
    "GrandOutput": {
      // This is the primary heart beat in milliseconds of the IGrandOutputHandler.OnTimer() calls that enables handlers to
      // do whatever required housekeeping.
      // The 500 ms default is okay for most usages. 
      // Handlers often combines this configuration with a multiplicator (see below the TextFile configuration).
      // 
      // "TimerDuration": 500,

      //
      // The handlers themselves:
      "Handlers": {
        // The Console handler writes all the logs to the console.
        "Console": true,

        // Simple clear text files.
        "TextFile": {
          // The rate of the auto flush (to be able to read the temporary current file content).
          // This is a multiple of the above TimerDuration and defaults to 6 (default timer duration
          // being 500 milliseconds, this flushes the text approximately every 3 seconds).
          // Setting this to zero disables the timed-base flush.
          //
          // "AutoFlushRate": 6,

          // Configures the maximal count of log entries per file before a new log file is created.
          // Defaults to 20000.
          // 
          // "MaxCountPerFile": 20000,
          //

          //
          // The rate of the automatic log file deletion.
          // This defaults to 1800 (which is 15 minutes with the default TimerDuration of 500ms).
          // Setting this to zero disables housekeeping entirely.
          //
          // "HousekeepingRate": 1800,
          //
          // Configures the minimum number of days to keep log files, when housekeeping is enabled via HousekeepingRate.
          // Log files older than this will be deleted. Setting this to 0 disables automatic file deletion.

          //
          // "MinimumDaysToKeep": 60,
          //
          // Configures the maximum total file size log files can use, in kilobytes.
          // Defaults to 100 megabytes.
          // Note that og files newer than MinimumDaysToKeep will not be deleted (even if the total exceed this value).
          //
          // "MaximumTotalKbToKeep": 100000,

          // Configure the path of the folder where the log files will be generated: this must be specified and identifies
          // the handler (multiple text handlers may coexist as long as their Path differ).
          // It may be an absolute path, otherwise it is relative to the global "LogPath" (see above).
          // 
          "Path": "Text"
        },

        // Binary log files. This handler offers the same MaxCountPerFile, HousekeepingRate, MinimumDaysToKeep, MaximumTotalKbToKeep
        // and Path configurations as the "TextFile" above (there is no AutoFlushRate).
        // 
        "BinaryFile": {
          "Path": "Binary"
        }
      }
    }
  },

  // This section configures the LoggerTestHostedService.
  "TesLogs": {
    "TimerDuration": "00:00:01"
  },
  "AllowedHosts": "*"
}
